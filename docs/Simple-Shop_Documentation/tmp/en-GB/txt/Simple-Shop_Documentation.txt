Product SiteDocumentation Site

Simple-Shop 0.4



Simple-Shop Documentation
=========================


User documentation for simple-shop v0.4.0-alpha
-----------------------------------------------

Edition 0.1


Sascha Peter

sascha.o.peter@gmail.com

------------------------------------------------------------------------



Legal Notice
============

Copyright Â© 2015 Sascha Peter This material may only be distributed
subject to the terms and conditions set forth in the GNU Free
Documentation License (GFDL), V1.2 or later (the latest version is
presently available at http://www.gnu.org/licenses/fdl.txt).

Abstract

This documentation will guide users how to setup this project and give an
overview about the code and technology used.

------------------------------------------------------------------------

Preface

      1. Document Conventions

            1.1. Typographic Conventions

            1.2. Pull-quote Conventions

            1.3. Notes and Warnings

      2. Feedback

1. Installation

      1.1. Setup Python 3 on MAC

      1.2. Setup Virtual Environment

      1.3. Install project dependencies

A. Revision History

Index



Preface
=======


1.Â Document Conventions
------------------------

This manual uses several conventions to highlight certain words and
phrases and draw attention to specific pieces of information. In PDF and
paper editions, this manual uses typefaces drawn from the Liberation
Fonts set. The Liberation Fonts set is also used in HTML editions if the
set is installed on your system. If not, alternative but equivalent
typefaces are displayed. Note: Red Hat Enterprise Linux 5 and later
includes the Liberation Fonts set by default.


1.1.Â Typographic Conventions

Four typographic conventions are used to call attention to specific words
and phrases. These conventions, and the circumstances they apply to, are
as follows. Mono-spaced Bold Used to highlight system input, including
shell commands, file names and paths. Also used to highlight keycaps and
key combinations. For example:

  To see the contents of the file my_next_bestselling_novel in your
  current working directory, enter the cat my_next_bestselling_novel
  command at the shell prompt and press Enter to execute the command.

The above includes a file name, a shell command and a keycap, all
presented in mono-spaced bold and all distinguishable thanks to context.
Key combinations can be distinguished from keycaps by the hyphen
connecting each part of a key combination. For example:

  Press Enter to execute the command. Press Ctrl+Alt+F1 to switch to
  the first virtual terminal. Press Ctrl+Alt+F7 to return to your
  X-Windows session.

The first paragraph highlights the particular keycap to press. The second
highlights two key combinations (each a set of three keycaps with each
set pressed simultaneously). If source code is discussed, class names,
methods, functions, variable names and returned values mentioned within a
paragraph will be presented as above, in mono-spaced bold. For example:

  File-related classes include filesystem for file systems, file for
  files, and dir for directories. Each class has its own associated set
  of permissions.

Proportional Bold This denotes words or phrases encountered on a system,
including application names; dialog box text; labeled buttons; check-box
and radio button labels; menu titles and sub-menu titles. For example:

  Choose System â Preferences â Mouse from the main menu bar to
  launch Mouse Preferences. In the Buttons tab, click the Left-handed
  mouse check box and click Close to switch the primary mouse button
  from the left to the right (making the mouse suitable for use in the
  left hand). To insert a special character into a gedit file, choose
  Applications â Accessories â Character Map from the main menu
  bar. Next, choose Search â Findâ¦ from the Character Map menu bar,
  type the name of the character in the Search field and click Next.
  The character you sought will be highlighted in the Character Table.
  Double-click this highlighted character to place it in the Text to
  copy field and then click the Copy button. Now switch back to your
  document and choose Edit â Paste from the gedit menu bar.

The above text includes application names; system-wide menu names and
items; application-specific menu names; and buttons and text found within
a GUI interface, all presented in proportional bold and all
distinguishable by context. Mono-spaced Bold Italic or Proportional Bold
Italic Whether mono-spaced bold or proportional bold, the addition of
italics indicates replaceable or variable text. Italics denotes text you
do not input literally or displayed text that changes depending on
circumstance. For example:

  To connect to a remote machine using ssh, type ssh username@domain.name
  at a shell prompt. If the remote machine is example.com and your
  username on that machine is john, type ssh john@example.com. The
  mount -o remount file-system command remounts the named file system.
  For example, to remount the /home file system, the command is mount
  -o remount /home. To see the version of a currently installed
  package, use the rpm -q package command. It will return a result as
  follows: package-version-release.

Note the words in bold italics above â username, domain.name,
file-system, package, version and release. Each word is a placeholder,
either for text you enter when issuing a command or for text displayed by
the system. Aside from standard usage for presenting the title of a work,
italics denotes the first use of a new and important term. For example:

  Publican is a DocBook publishing system.


1.2.Â Pull-quote Conventions

Terminal output and source code listings are set off visually from the
surrounding text. Output sent to a terminal is set in mono-spaced roman
and presented thus:

bin var home etc lib mnt proc opt

Source-code listings are also set in mono-spaced roman but add syntax
highlighting as follows:

#!/usr/bin/env python
class ExampleClass(object):    """This is an example class.    @author: Sascha Peter <sascha.o.peter@stickyboard.co.uk>    @since: 2015-07-14    @version: 0.1.0-alpha    """
    def __init__(self):        print("Init isn't it?")
    def main(self):        print("Main method")if __name__ == '__main__':    example_class = ExampleClass()    print example_class.main()


1.3.Â Notes and Warnings

I'm using three kinds of ways to visually highlight important
information.


Note
----

Notes are tips to make your life easier.


Important
---------

Important boxes are things which you need to make sure you followed or
considered.


Warning
-------

Warnings are something which should not be ignored as it may makes your
life more troublesome than it needs be.


2.Â Feedback
------------

This document has been created with big care, however, it is always
possible that small errors find their way into the project. If you have
any feedback, suggestions or found typos and alike, please feel free to
contact me under sascha.o.peter@gmail.com to let me know and I will
adjust them in accordingly.


ChapterÂ 1.Â Installation
-------------------------

1.1. Setup Python 3 on MAC

1.2. Setup Virtual Environment

1.3. Install project dependencies

The following sections will guide you through the setup and installation
of the software on your device.


1.1.Â Setup Python 3 on MAC
---------------------------

Simple-Shop has been built and developed in Python 3.3.2 and Django 1.8.
One of the easiest ways to set up python3, or generally multiple versions
of python on your environment is through https://github.com/yyuu/pyenv.
The following commands are a quick cheat sheet for you if you installed
everything correctly with pyenv. To install a version pyenv install
version.number To set it/switch to it pyenv global version.number Then to
check the set version pyenv version And the overall system version python
--version


Python 3.3.2 required!
----------------------

The software has been tested with Python 3.3.2 and Django 1.8. Please
make sure you have the right version installed.


1.2.Â Setup Virtual Environment
-------------------------------

When working with different Python versions or different projects, it's
suggested to use separate environments for each project to handle their
requirements. One way to achieve this is to use virtualenv. Pyenv has a
plugin for virtualenv https://github.com/yyuu/pyenv-virtualenv. But you
are free to use any virtualenv solution you prefer.


Make sure you activate your virtual environment!
------------------------------------------------

Depending on your operating system and virtualenv solution you went for,
the command to activate the virtualenv may vary. With pyenv-virtualenv
the command would be pyenv activate your-virtual-env


1.3.Â Install project dependencies
----------------------------------

When working with different Python versions or different projects, it's
suggested to use separate environments for each project to handle their
requirements. After activating the virtual environment for your
simple-shop project, you can install all project requirements through
PIP. All project dependencies are listed in the pip-requirements.txt file
in the root of the project. pip install -r pip-requirements.txt



Revision History
================

Revision History

Revision 0

Tue Jul 14 2015

Sascha Peter

Initial creation of book by publican


Index
-----


D

django

      python web framework for perfectionists with deadlines,
      Installation


F

feedback

      contact information for this manual, Feedback


P

pip   

      python package manager for installing additional packages from the
      python package index (PyPI), Installation

pyenv 

      Tool to use multiple python installations on the same unix system,
      Installation

python

      object oriented programming language, widely found in unix/linux
      operating systems, Installation
